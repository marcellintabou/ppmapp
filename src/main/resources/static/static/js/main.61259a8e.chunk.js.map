{"version":3,"sources":["actions/projectActions.js","actions/types.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","components/Layout/Header.js","components/Project/AddProject.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagment/Register.js","components/UserManagment/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","this","_x","apply","arguments","initialState","projects","project_tasks","project_task","validToken","user","combineReducers","errors","state","length","undefined","action","objectSpread","filter","projectIdentifier","backlog","projectSequence","security","middleware","thunk","store","window","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","ProjectItem","onDelete","_this","props","deleteProject","jwtToken","decoded_jwtToken","jwt_decode","currentTime","Date","now","exp","location","href","react_default","createElement","className","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","Project_CreateProjectButton","map","Project_ProjectItem","key","id","_ref2","_callee2","res","_context2","get","sent","_x2","Header","headerLinks","_this$props$security","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","project_task_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","onDeleteClick","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","error","newTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updatedProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","loginRequest","login","LoginRequest","decoded","setItem","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","App","es","BrowserRouter","Layout_Header","exact","path","Switch","securityUtils_SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61259a8e.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n    try {\n        await axios.post(`/api/project`, project);\n        history.push(\"/dashboard\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getProjects = () => async dispatch => {\n    const res = await axios.get(\"/api/project/all\");\n    dispatch({\n        type: GET_PROJECTS,\n        payload: res.data\n    });\n};\n\nexport const getProject = (projectIdentifier, history) => async dispatch => {\n  \n    const res = await axios.get(`/api/project/${projectIdentifier}`);\n    dispatch({\n        type: GET_PROJECT,\n        payload: res.data\n    });\n};\n\nexport const deleteProject = (projectIdentifier, history) => async dispatch => {\n   if(window.confirm(\"Sure to delete the project and all related data?\")){\n    await axios.delete(`/api/project/${projectIdentifier}`);\n    dispatch({\n        type: DELETE_PROJECT,\n        payload: projectIdentifier\n    });\n   }\n    \n};\n","\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\n//Security\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import {GET_ERRORS} from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state=initialState, action){\n    \n     switch(action.type){\n        \n        case GET_ERRORS:\n            return action.payload;\n            \n        default:\n            return state;\n    }\n}","import {GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from \"../actions/types\";\n\nconst initialState = {\n    projects: [],\n    project:{}\n};\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case GET_PROJECTS: \n            return{\n                ...state,\n                projects: action.payload\n            };\n        case GET_PROJECT:\n            return{\n                ...state,\n                project: action.payload\n            };\n        case DELETE_PROJECT:\n            return{\n                ...state,\n                projects: state.projects.filter(\n                    project => project.projectIdentifier !== action.payload\n                )\n            };\n        default:\n            return state;\n    }\n}","import {\n    GET_BACKLOG, \n    GET_PROJECT_TASK, \n    DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n    project_tasks:[],\n    project_task: {}\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        \n        case GET_BACKLOG:\n            return{\n                ...state, \n                project_tasks: action.payload\n            }\n\n        case GET_PROJECT_TASK:\n            return{\n                ...state,\n                project_task: action.payload\n            }\n\n        case DELETE_PROJECT_TASK:\n            return{\n                ...state,\n               project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\n            }\n\n        default: \n        return state;\n    }\n}","import {SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n    validToken: false,\n    user: {}\n   \n}\n\nconst booleanActionPayload = (payload)  => {\n    if(payload){ \n        return true\n    }else{\n        return false;\n    }\n}\nexport default function(state= initialState, action){\n    switch(action.type){\n        case SET_CURRENT_USER:\n        return {\n            ...state,\n            validToken: booleanActionPayload(action.payload),\n            user: action.payload\n        }\n\n        default:\n        return state\n    }\n}","import {combineReducers} from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\n\nexport default combineReducers({\n    errors: errorReducer,\n    project: projectReducer,\n    backlog: backlogReducer,\n    security: securityReducer \n});","import {createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store ;\n\nif(window.navigator.userAgent.includes(\"Chrome\")){\n    store = createStore(\n        rootReducer, \n        initialState, \n        compose(applyMiddleware(...middleware), \n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )\n    );\n}else{\n    store = createStore(\n        rootReducer, \n        initialState, \n        compose(applyMiddleware(...middleware))\n    );\n}\nexport default store;","import axios from \"axios\";\n\nconst setJWTToken = token =>{\n    if(token){\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    }else{\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setJWTToken;","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch  => {\n    try{\n        await axios.post(\"/api/users/register\", newUser);\n        history.push(\"/login\");\n        dispatch({\n            type: GET_ERRORS,\n            payload:{} \n            //\"proxy\": \"https://ppmapp.herokuapp.com/\",\n        });\n    }catch(err){\n        dispatch({\n            type: GET_ERRORS,\n            payload:err.response.data\n        });\n    }\n}\n\nexport const login = LoginRequest => async dispatch  => {\n    \n\n    try{\n      //  console.log(LoginRequest);\n        // post Login Request\n        const res =  await axios.post(\"/api/users/login\", LoginRequest);\n        // extract the token form res.data\n        const {token} = res.data;\n        // Store the token in the localstorage\n        localStorage.setItem(\"jwtToken\", token);\n        // set our token in header ***\n        setJWTToken(token);\n        // Decode the token on React\n        const decoded = jwt_decode(token);\n        // dispatch to our szecurityReducer\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload:decoded\n        });\n    }catch(err){\n        //console.log(err);\n        dispatch({\n            type: GET_ERRORS,\n            payload:err.response.data\n        });\n    }\n};\n\nexport const logout = () => dispatch  => {\n    localStorage.removeItem(\"jwtToken\");\n    setJWTToken(false);\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload:{}\n    });\n};","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {deleteProject } from \"../../actions/projectActions\";\nimport store from \"../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logout } from '../../actions/securityActions';\n\nclass ProjectItem extends Component {\n    onDelete = projectIdentifier => {\n        this.props.deleteProject(projectIdentifier);\n    };\n    componentWillMount(){\n        const jwtToken = localStorage.jwtToken;\n        const decoded_jwtToken = jwt_decode(jwtToken);\n        if(jwtToken){     \n            const currentTime = Date.now()/1000;\n            if(decoded_jwtToken.exp < currentTime){\n                store.dispatch(logout());\n                window.location.href = \"/\";\n            }\n        }\n          \n    }\n    render() {\n        const {project} = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>{project.projectName}</h3>\n                            <p>{project.description}</p>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-1\">Project Board </i>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-1\">Update Project Info</i>\n                                    </li>\n                                </Link>\n                                <li className=\"list-group-item delete\" onClick={this.onDelete.bind(this, project.projectIdentifier)}>\n                                    <i className=\"fa fa-minus-circle pr-1\">Delete Project</i>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectItem.propTypes = {\n    deleteProject: PropTypes.func.isRequired\n}\n\nexport default connect(null, {deleteProject}) (ProjectItem);","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n\n    return  (\n        <React.Fragment> \n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n                Create a Project\n            </Link>\n        </React.Fragment>\n    );\n};\n\nexport default CreateProjectButton;","import React, { Component } from 'react';\nimport ProjectItem from './Project/ProjectItem';\nimport CreateProjectButton from './Project/CreateProjectButton';\nimport {connect} from \"react-redux\";\nimport {getProjects} from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport store from '../store'; \nimport jwt_decode from \"jwt-decode\";\nimport { logout } from '../actions/securityActions';\n\nclass Dashboard extends Component {\n    componentDidMount(){\n       this.props.getProjects(); \n    }\n    componentWillMount(){\n        const jwtToken = localStorage.jwtToken;\n        const decoded_jwtToken = jwt_decode(jwtToken);\n        if(jwtToken){     \n            const currentTime = Date.now()/1000;\n            if(decoded_jwtToken.exp < currentTime){\n                store.dispatch(logout());\n                window.location.href = \"/\";\n            }\n        }\n          \n    }\n    render() {\n\n        const  {projects} = this.props.project; // == projects = this.props.project.projects;\n        return (\n            <div className=\"projects\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Projects</h1>\n                            <br />\n                            <CreateProjectButton/>\n                            <br />\n                            <hr />\n                            {\n                                projects.map(project => (\n                                    <ProjectItem key={project.id} project={project} />\n                                ))\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n};\nconst mapStateToProps = state =>({\n    project: state.project     //project == project reducer definend in reducers/index.js file\n});\nexport default connect(mapStateToProps, {getProjects})(Dashboard);","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../actions/securityActions\";\n\n\nclass Header extends Component {\n    logout(){\n        this.props.logout();\n        window.location.href = \"/\";\n    }\n\n    render() {\n        const {validToken, user} = this.props.security;\n\n        const userIsAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"/dashboard\">\n                            Dashboard\n                        </a>\n                    </li>\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link \" to=\"/dashboard\">\n                            {user.fullName}\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link \n                            className=\"nav-link\" \n                            to=\"/logout\" \n                            onClick={this.logout.bind(this)}\n                        >\n                            Logout \n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        \n\n        const userIsNotAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                \n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link \" to=\"/register\">\n                            Sign Up\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/login\">\n                            Login \n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n        \n        let headerLinks;\n        if(validToken && user){\n            headerLinks = userIsAuthenticated;\n        }else{\n            headerLinks = userIsNotAuthenticated;\n        }\n       \n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n                <div className=\"container\">\n                    <Link className=\"navbar-brand\" to=\"/dashboard\">\n                        Personal Project Management Tool\n                    </Link>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n                    {headerLinks}\n                    \n                </div>\n            </nav>\n        );\n    }\n}\n\nHeader.propTypes = {\n    logout: PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    security: state.security\n});\n\nexport default connect(\n    mapStateToProps, \n    {logout}\n)(Header);\n\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {createProject} from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\nimport store from \"../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logout } from '../../actions/securityActions';\n\nclass AddProject extends Component {\n    constructor(){\n        super();\n        this.state = {\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this); //this is a shortcut to bind the on change function to all input fields instead of copying and pasting into all input fields\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    componentWillMount(){\n        const jwtToken = localStorage.jwtToken;\n        const decoded_jwtToken = jwt_decode(jwtToken);\n        if(jwtToken){     \n            const currentTime = Date.now()/1000;\n            if(decoded_jwtToken.exp < currentTime){\n                store.dispatch(logout());\n                window.location.href = \"/\";\n            }\n        }\n          \n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    onChange(e){\n        this.setState({ [e.target.name]:e.target.value});\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newProject = {\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date:  this.state.start_date,\n            end_date:    this.state.end_date\n        };\n        this.props.createProject(newProject, this.props.history); \n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div>\n                \n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"text\" \n                                            className={classnames(\"form-control form-control-lg\",{\n                                                \"is-invalid\": errors.projectName\n                                            })} \n                                            placeholder=\"Project Name\" \n                                            name=\"projectName\" \n                                            value={this.state.projectName}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectName && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.projectName}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"text\"  \n                                            className={classnames(\"form-control form-control-lg\",{\n                                                \"is-invalid\": errors.projectIdentifier\n                                            })} \n                                            placeholder=\"Unique Project ID\" \n                                           // disabled \n                                            name=\"projectIdentifier\" \n                                            value={this.state.projectIdentifier}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectIdentifier && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.projectIdentifier}\n                                            </div>\n                                        )}\n                                    </div>\n                                   \n                                    <div className=\"form-group\">\n                                        <textarea  \n                                             className={classnames(\"form-control form-control-lg\",{\n                                                \"is-invalid\": errors.description\n                                            })}  \n                                            placeholder=\"Project Description\"  \n                                            name=\"description\"  \n                                            value={this.state.description}\n                                            onChange={this.onChange}\n                                        ></textarea>\n                                         {errors.description && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.description}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"date\" \n                                            className=\"form-control form-control-lg\" \n                                            name=\"start_date\"  \n                                            value={this.state.start_date}\n                                            onChange={this.onChange}\n                                        />\n                                         <p>{errors.start_date}</p>\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"date\" \n                                            className=\"form-control form-control-lg\" \n                                            name=\"end_date\"  \n                                            value={this.state.end_date}\n                                            onChange={this.onChange}\n                                        />\n                                         <p>{errors.end_date}</p>\n                                    </div>\n\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddProject.propTypes = {\n    createProject: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state =>({\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    {createProject}\n)(AddProject);","import React, { Component } from 'react';\nimport {getProject, createProject} from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport classnames from \"classnames\";\nimport store from \"../../store\";\nimport jwt_decode from \"jwt-decode\"; \nimport { logout } from '../../actions/securityActions';\nclass UpdateProject extends Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n            id: \"\",\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n           \n        }\n        const {\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        } = nextProps.project;\n\n        this.setState({\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        });\n    }\n\n    componentDidMount(){\n        const {projectIdentifier} = this.props.match.params;\n        this.props.getProject(projectIdentifier, this.props.history);\n    }\n\n    componentWillMount(){\n        const jwtToken = localStorage.jwtToken;\n        const decoded_jwtToken = jwt_decode(jwtToken);\n        if(jwtToken){     \n            const currentTime = Date.now()/1000;\n            if(decoded_jwtToken.exp < currentTime){\n                store.dispatch(logout());\n                window.location.href = \"/\";\n            }\n        }\n          \n    }\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n    onSubmit(e){\n        e.preventDefault();\n        const updateProject = {\n            id: this.state.id ,\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        };\n        this.props.createProject(updateProject, this.props.history);\n    }\n\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"project\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\n                            <hr />\n                            <form onSubmit = {this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                          \"is-invalid\": errors.projectName\n                                        })}\n                                        placeholder=\"Project Name\" \n                                        name=\"projectName\" \n                                        value={this.state.projectName}\n                                        onChange = {this.onChange}\n                                    />\n                                    {errors.projectName && (\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control form-control-lg\" \n                                        placeholder=\"Unique Project ID\"\n                                        name=\"projectIdentifier\"\n                                        value={this.state.projectIdentifier}\n                                        disabled />\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.description\n                                        })}\n                                        placeholder=\"Project Description\"\n                                        name=\"description\"\n                                        value={this.state.description}\n                                        onChange = {this.onChange}\n                                        >\n                                        {errors.description && (\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\n                                        )}\n                                    </textarea>\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"date\" \n                                        className=\"form-control form-control-lg\" \n                                        name=\"start_date\" \n                                        value={this.state.start_date? this.state.start_date : \"\"}\n                                        onChange = {this.onChange}\n                                    />\n                                </div>\n                                <h6>Estimated End Date</h6>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"date\" \n                                        className=\"form-control form-control-lg\" \n                                        name=\"end_date\" \n                                        value={this.state.end_date? this.state.end_date : \"\"}\n                                        onChange = {this.onChange}/>\n                                </div>\n        \n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUpdateProject.propTypes = {\n    getProject: PropTypes.func.isRequired,\n    createProject: PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state =>({\n    project: state.project.project,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps, \n    {getProject, createProject}\n)(UpdateProject);","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport {deleteProjectTask} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport store from \"../../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logout } from '../../../actions/securityActions';\n \n\nclass ProjectTask extends Component {\n\n    onDeleteClick(backlog_id, project_task_id){\n        \n        this.props.deleteProjectTask(backlog_id, project_task_id);\n    }\n\n    componentWillMount(){\n        const jwtToken = localStorage.jwtToken;\n        const decoded_jwtToken = jwt_decode(jwtToken);\n        if(jwtToken){     \n            const currentTime = Date.now()/1000;\n            if(decoded_jwtToken.exp < currentTime){\n                store.dispatch(logout());\n                window.location.href = \"/\";\n            }\n        }\n          \n    }\n\n    render() {\n        const {project_task} = this.props;\n        let priorityString;\n        let priorityClass;\n        \n        if(project_task.priority === 1){\n            priorityClass = \"bg-danger text-light\";\n            priorityString = \"HIGH\";\n        }\n        if(project_task.priority === 2){\n            priorityClass = \"bg-warning text-light\";\n            priorityString = \"MEDIUM\";\n        }\n        if(project_task.priority === 3){\n            priorityClass = \"bg-info text-light\";\n            priorityString = \"LOW\";\n        }\n        return (         \n            <div className=\"card mb-1 bg-light\">\n\n                <div className={`card-header text-primary ${priorityClass}`}>\n                    ID: {project_task.projectSequence} -- Priority: {priorityString}\n                </div>\n                <div className=\"card-body bg-light\">\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\n                    <p className=\"card-text text-truncate \">\n                        {project_task.acceptanceCriteria}\n                    </p>\n                    <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\n  \n                        View / Update\n                    </Link>\n\n                    <button \n                        className=\"btn btn-danger ml-4\" \n                        onClick = {this.onDeleteClick.bind(\n                            this, \n                            project_task.projectIdentifier, \n                            project_task.projectSequence\n                            )}\n                    >\n                        Delete\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectTask.propTypes = {\n    deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n    null, \n    {deleteProjectTask}\n)(ProjectTask);","import axios from \"axios\";\nimport { \n    GET_ERRORS, \n    GET_BACKLOG, \n    GET_PROJECT_TASK, \n    DELETE_PROJECT_TASK \n} from \"./types\";\n\nexport const addProjectTask = (\n    backlog_id, \n    project_task, \n    history\n)   => async dispatch => {\n    try{\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type:GET_ERRORS,\n            payload: {}\n        });\n    }catch(err){\n        dispatch({\n            type:GET_ERRORS,\n            payload: err.response.data\n        });\n    }   \n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n    try{\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\n        dispatch({\n            type:GET_BACKLOG,\n            payload: res.data\n        });\n    }catch(err){\n        dispatch({\n            type:GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n    \n};\n\nexport const getProjectTask = (backlog_id, project_task_id, history) => async dispatch => {\n    try{\n        const res = await axios.get(`/api/backlog/${backlog_id}/${project_task_id}`);\n       // console.log(res);\n        dispatch({\n            type:GET_PROJECT_TASK,\n            payload: res.data\n        });\n    }catch(err){\n        history.push(\"/dashboard\");\n    }\n};\n\nexport const updateProjectTask = (backlog_id, project_task_id, project_task, history) => async dispatch => {\n    try {\n        await axios.patch(`/api/backlog/${backlog_id}/${project_task_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        })\n    }catch(err){\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    }\n}\n\nexport const deleteProjectTask = (backlog_id, project_task_id) => async dispatch => {\n    \n    if(window.confirm(`Sure to delete the project task ${project_task_id}, this action cannot be undone`)){\n        \n        await axios.delete(`/api/backlog/${backlog_id}/${project_task_id}`);\n        dispatch({\n            type: DELETE_PROJECT_TASK,\n            payload: project_task_id\n        });\n    }\n     \n };\n ","import React, { Component } from 'react';\nimport ProjectTask from './ProjectTasks/ProjectTask';\n//marco\nimport {logout } from \"../../actions/securityActions\";\nimport jwt_decode from \"jwt-decode\";\nimport store from \"../../store\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif(jwtToken){\n  //setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  const currentTime = Date.now()/1000;\n  if(decoded_jwtToken.exp < currentTime){\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass Backlog extends Component {\n    componentWillMount(){\n        const jwtToken = localStorage.jwtToken;\n        const decoded_jwtToken = jwt_decode(jwtToken);\n        if(jwtToken){     \n            const currentTime = Date.now()/1000;\n            if(decoded_jwtToken.exp < currentTime){\n                store.dispatch(logout());\n                window.location.href = \"/\";\n            }\n        }\n          \n    }\n    render() {\n        const {project_tasks_prop} = this.props;\n        const tasks = project_tasks_prop.map(project_task => (\n            <ProjectTask key={project_task.id} project_task = {project_task} /> \n        ));\n\n        let todoItems = [];\n        let inProgressItems = [];\n        let doneItems = [];\n\n        for(let i=0; i<tasks.length; i++){\n            if(tasks[i].props.project_task.status === \"TO_DO\"){\n                todoItems.push(tasks[i]);\n            }\n            if(tasks[i].props.project_task.status === \"IN_PROGRESS\"){\n                inProgressItems.push(tasks[i]);\n            }\n            if(tasks[i].props.project_task.status === \"DONE\"){\n                doneItems.push(tasks[i]);\n            }\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-secondary text-white\">\n                                <h3>TO DO</h3>\n                            </div>\n                        </div>\n                        {todoItems}\n                        {\n                            //insert tasks here\n                        }\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-primary text-white\">\n                                <h3>In Progress</h3>\n                            </div>\n                        </div>\n                        {inProgressItems}\n                        {\n                            //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n\n                            //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n                        }\n                        \n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-success text-white\">\n                                <h3>Done</h3>\n                            </div>\n                        </div>\n                        {doneItems}\n                        {\n                            //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n\n                            //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Backlog;","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getBacklog} from \"../../actions/backlogActions\";\nimport store from '../../store';\nimport jwt_decode from \"jwt-decode\";\nimport { logout } from '../../actions/securityActions';\n\nclass ProjectBoard extends Component {\n    //coinstructor to handle errors\n    constructor(){\n        super();\n        this.state = {\n            errors: {}\n        }\n    }\n    componentDidMount(){\n        const {id} = this.props.match.params;\n        this.props.getBacklog(id);\n    }\n    componentWillMount(){\n        const jwtToken = localStorage.jwtToken;\n        const decoded_jwtToken = jwt_decode(jwtToken);\n        if(jwtToken){     \n            const currentTime = Date.now()/1000;\n            if(decoded_jwtToken.exp < currentTime){\n                store.dispatch(logout());\n                window.location.href = \"/\";\n            }\n        }\n          \n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n    render() {\n        const {id} = this.props.match.params;\n        const {project_tasks} = this.props.backlog;\n        const {errors} = this.state;\n\n        let BoardContent;\n\n        const boardAlgorithm = (errors, project_task) => {\n            if(project_tasks.length <1){\n                if(errors.projectNotFound){\n                    return(\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\n                            {errors.projectNotFound}\n                        </div>\n                    );\n                }else{\n                   return (<div className=\"alert alert-info text-center\" role=\"alert\">\n                        No project Tasks on this board\n                    </div> )\n                }\n            }else{\n                return <Backlog project_tasks_prop={project_tasks}/>;\n            }\n        };\n        BoardContent = boardAlgorithm(errors, project_tasks);\n\n        return (\n            <div className=\"container\">\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n                </Link>\n                <br />\n                <hr />\n                {BoardContent}\n            </div>\n        );\n    }\n}\nProjectBoard.propTypes = {\n    backlog: PropTypes.object.isRequired,\n    getBacklog: PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired \n};\nconst mapStateToProps = state => ({\n    backlog: state.backlog,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps, \n    {getBacklog}\n)(ProjectBoard);","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport classnames from \"classnames\";\nimport {addProjectTask} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport store from \"../../../store\"; \nimport jwt_decode from \"jwt-decode\";\nimport { logout } from '../../../actions/securityActions';\n\nclass AddProjectTask extends Component {\n    constructor(props){\n        super(props);\n        const {id} = this.props.match.params;\n        this.state = {\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: \"\",\n            projectIdentifier: id,\n            error: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    componentWillMount(){\n        const jwtToken = localStorage.jwtToken;\n        const decoded_jwtToken = jwt_decode(jwtToken);\n        if(jwtToken){     \n            const currentTime = Date.now()/1000;\n            if(decoded_jwtToken.exp < currentTime){\n                store.dispatch(logout());\n                window.location.href = \"/\";\n            }\n        }\n          \n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n    //on change\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    //on submit\n    onSubmit(e){\n        e.preventDefault();\n        const newTask = {\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate        \n        };\n        this.props.addProjectTask(this.state.projectIdentifier, newTask, this.props.history);\n    }\n    render() {\n        const {id} = this.props.match.params;\n        const {errors} = this.state;\n        return (\n            <div className=\"add-PBI\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <Link to={`/projectBoard/>${id}`} className=\"btn btn-light\">\n                            Back to Project Board\n                        </Link>\n                        <h4 className=\"display-4 text-center\">Add /Update Project Task</h4>\n                        <p className=\"lead text-center\">Project:  {this.state.projectIdentifier}</p>\n                        <form onSubmit = {this.onSubmit}>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"text\"\n                                    \n                                    className=\"form-control form-control-lg\"\n                                    name=\"summary\" \n                                    placeholder=\"Project Task summary\"\n                                    value={this.state.summary}\n                                    onChange={this.onChange} \n                                />\n                              \n                            </div>\n                            <div className=\"form-group\">\n                                <textarea \n                                    className=\"form-control form-control-lg\" \n                                    placeholder=\"Acceptance Criteria\" \n                                    name=\"acceptanceCriteria\"\n                                    value={this.state.acceptanceCriteria} \n                                    onChange={this.onChange} \n                                >\n                                </textarea>\n                            </div>\n                            <h6>Due Date</h6>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"date\" \n                                    className=\"form-control form-control-lg\" \n                                    name=\"dueDate\" \n                                    value={this.state.dueDate}\n                                    onChange={this.onChange}   \n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <select \n                                    className=\"form-control form-control-lg\" \n                                    name=\"priority\"\n                                    value={this.state.priority} \n                                    onChange={this.onChange}  \n                                >\n                                    <option value={0}>Select Priority</option>\n                                    <option value={1}>High</option>\n                                    <option value={2}>Medium</option>\n                                    <option value={3}>Low</option>\n                                </select>\n                            </div>\n    \n                            <div className=\"form-group\">\n                                <select \n                                    className=\"form-control form-control-lg\" \n                                    name=\"status\"\n                                    value={this.state.status}\n                                    onChange={this.onChange}   \n                                    >\n                                    <option value=\"\">Select Status</option>\n                                    <option value=\"TO_DO\">TO DO</option>\n                                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                    <option value=\"DONE\">DONE</option>\n                                </select>\n                            </div>\n    \n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n        );\n    }\n}\n\nAddProjectTask.propTypes = {\n    addProjectTask: PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    errors: state.errors\n})\nexport default connect(\n    mapStateToProps, \n    {addProjectTask}\n)(AddProjectTask);","\nimport React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport classnames from \"classnames\";\nimport {getProjectTask, updateProjectTask} from \"../../../actions/backlogActions\"\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport store from \"../../../store\"; \nimport jwt_decode from \"jwt-decode\";\nimport {logout } from \"../../../actions/securityActions\";\n\nclass UpdateProjectTask extends Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n            id: \"\",\n            projectSequence: \"\",\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: \"\",\n            dueDate: \"\", \n            projectIdentifier: \"\",\n            create_At: \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    componentDidMount(){\n        const jwtToken = localStorage.jwtToken;\n        const decoded_jwtToken = jwt_decode(jwtToken);\n        if(jwtToken){     \n            const currentTime = Date.now()/1000;\n            if(decoded_jwtToken.exp < currentTime){\n                store.dispatch(logout());\n                window.location.href = \"/\";\n            }\n        }\n        const {backlog_id, project_task_id} = this.props.match.params;\n         \n        this.props.getProjectTask(backlog_id, project_task_id, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors})\n        }\n        const {\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate, \n            projectIdentifier,\n            create_At\n        } = nextProps.project_task;\n\n        this.setState({\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate, \n            projectIdentifier,\n            create_At\n        });\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const updatedProjectTask = {\n            id:this.state.id,\n            projectSequence:this.state.projectSequence,\n            summary:this.state.summary,\n            acceptanceCriteria:this.state.acceptanceCriteria,\n            status:this.state.status,\n            priority:this.state.priority,\n            dueDate: this.state.dueDate, \n            projectIdentifier:this.state.projectIdentifier,\n            create_At:this.state.create_At,\n        }\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, updatedProjectTask, this.props.history)\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\n                            <p className=\"lead text-center\">Project Name: {this.state.projectIdentifier} + Project Task ID: {this.state.projectSequence} </p>\n                            <form onSubmit = {this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.summary\n                                        })} \n                                        name=\"summary\" \n                                        placeholder=\"Project Task summary\" \n                                        value = {this.state.summary}\n                                        onChange = {this.onChange}\n                                    />\n                                    {errors.summary && (\n                                       <div className=\"invalid-feedback\">{errors.summary}</div> \n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.acceptanceCriteria\n                                        })}  \n                                        placeholder=\"Acceptance Criteria\" \n                                        name=\"acceptanceCriteria\"\n                                        value = {this.state.acceptanceCriteria}\n                                        onChange = {this.onChange}\n                                    ></textarea>\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"date\" \n                                        className=\"form-control form-control-lg\" \n                                        name=\"dueDate\"\n                                        value = {this.state.dueDate || \"\"}\n                                        onChange = {this.onChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select \n                                        className=\"form-control form-control-lg\" \n                                        name=\"priority\"\n                                        value = {this.state.priority}\n                                        onChange = {this.onChange}\n                                    >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <select \n                                        className=\"form-control form-control-lg\" \n                                        name=\"status\"\n                                        value = {this.state.status}\n                                        onChange = {this.onChange}\n                                    >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n        </div> \n        );\n    }\n}\nUpdateProjectTask.propTypes = {\n    getProjectTask: PropTypes.func.isRequired,\n    project_task: PropTypes.object.isRequired,\n    updateProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    project_task: state.backlog.project_task,\n    errors: state.errors\n})\n\nexport default connect(\n    mapStateToProps, \n    {getProjectTask, updateProjectTask}\n)(UpdateProjectTask);","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n\nclass Landing extends Component {\n\n    componentDidMount(){\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h1 className=\"display-3 mb-4\">Personal Kanban Tool</h1>\n                                <p className=\"lead\">\n                                    Create your account to join active projects or start you own\n                                </p>\n                                <hr />\n                                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                                    Sign Up\n                                </Link>\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                                    Login\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLanding.propTypes = {\n    security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    security: state.security\n});\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react';\nimport {createNewUser} from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport classnames from \"classnames\";\n\n\nclass Register extends Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            fullName: \"\",\n            confirmPassword: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            password: this.state.password,\n            fullName: this.state.fullName,\n            confirmPassword: this.state.confirmPassword\n        }\n        this.props.createNewUser(newUser, this.props.history);\n    }\n\n    componentDidMount(){\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">Create your Account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.fullName\n                                        })} \n                                        placeholder=\"Full Name\" \n                                        name=\"fullName\"\n                                        value={this.state.fullName}\n                                        onChange={this.onChange} \n                                    />\n                                    {errors.fullName && (\n                                        <div className=\"invalid-feedback\">{errors.fullName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.username\n                                        })} \n                                        placeholder=\"Email Address (Username)\" \n                                        name=\"username\" \n                                        value={this.state.username} \n                                        onChange={this.onChange}\n                                    />\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}    \n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"password\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\":errors.password\n                                        })} \n                                        placeholder=\"Password\" \n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}  \n                                    />\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"password\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.confirmPassword\n                                        })} \n                                        placeholder=\"Confirm Password\"\n                                        name=\"confirmPassword\" \n                                        value={this.state.confirmPassword} \n                                        onChange={this.onChange}\n                                    />\n                                    {errors.confirmPassword && (\n                                        <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    createNewUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n     errors: state.errors,\n     security: state.security\n    \n});\nexport default connect(\n    mapStateToProps, \n    {createNewUser}\n)(Register);","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport classnames from \"classnames\";\nimport {login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n    constructor(){\n        super();\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    componentDidMount(){\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n    \n    componentWillReceiveProps(nextProps){\n        if(nextProps.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n    onSubmit(e){\n        e.preventDefault();\n        const loginRequest = {\n            username: this.state.username,\n            password: this.state.password \n        }\n        this.props.login(loginRequest);\n    }\n\n    render() {\n        const {errors} = this.state;\n\n        return (\n          <div className=\"login\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <h1 className=\"display-4 text-center\">Log In</h1>\n                        <form onSubmit= {this.onSubmit}>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className={classnames(\"form-control form-control-lg\",{\n                                        \"is-invalid\": errors.username\n                                    })} \n                                    placeholder=\"Email Address\" \n                                    name=\"username\" \n                                    value={this.state.username}\n                                    onChange={this.onChange}\n                                />\n                                {errors.username && (\n                                    <div className=\"invalid-feedback\">{errors.username}</div>\n                                )}\n                            </div>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"password\" \n                                    className={classnames(\"form-control form-control-lg\",{\n                                        \"is-invalid\": errors.password\n                                    })} \n                                    placeholder=\"Password\" \n                                    name=\"password\" \n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n                                {errors.password && (\n                                    <div className=\"invalid-feedback\">{errors.password}</div>\n                                )}\n                            </div>\n                            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps, \n    {login}\n) (Login);","import React from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n\nconst SecureRoute = ({component: Component, security, ...otherProps}) => (\n    <Route \n        {...otherProps} \n        render={props => \n            security.validToken ===true ? (\n                <Component{...props}/>\n            ):(\n                <Redirect to=\"/login\"/>\n            )\n        } \n    />\n);\n\nSecureRoute.propTypes = {\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state =>({\n    security: state.security\n});\n\nexport default connect(mapStateToProps)(SecureRoute);","import React, { Component } from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport AddProject from './components/Project/AddProject';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from \"./components/Layout/Landing\";\nimport Register from './components/UserManagment/Register';\nimport Login from './components/UserManagment/Login';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from './actions/types';\nimport {logout } from \"./actions/securityActions\";\nimport SecureRoute from \"./securityUtils/SecureRoute\"\n\nconst jwtToken = localStorage.jwtToken;\n\nif(jwtToken){\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now()/1000;\n  if(decoded_jwtToken.exp < currentTime){\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n            <Route exact path=\"/\" component={Landing}/>\n            <Route exact path=\"/register\" component={Register}/>\n            <Route exact path=\"/login\" component={Login}/>\n            {\n              //Privates Routes\n            }\n            <Switch>\n              <SecureRoute exact path=\"/dashboard\" component={Dashboard}/>\n              <SecureRoute exact path=\"/addProject\" component={AddProject}/>\n              <SecureRoute exact path=\"/updateProject/:projectIdentifier\" component={UpdateProject}/>\n              <SecureRoute exact path=\"/projectBoard/:id\" component={ProjectBoard}/>\n              <SecureRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask}/>\n              <SecureRoute exact path=\"/updateProjectTask/:backlog_id/:project_task_id\" component={UpdateProjectTask}/>\n            </Switch>                  \n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App; \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}