{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagment/Register.js","components/UserManagment/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","this","_x","apply","arguments","ProjectItem","onDelete","projectIdentifier","_this","props","deleteProject","react_default","createElement","className","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","id","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","project_task_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","onDeleteClick","_ref5","_callee5","_context5","_x5","jwtToken","decoded_jwtToken","jwt_decode","currentTime","Date","now","exp","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","error","newTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updatedProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","loginRequest","login","LoginRequest","decoded","setItem","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","App","es","BrowserRouter","Layout_Header","exact","path","Switch","securityUtils_SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7caf099.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n    try {\n        await axios.post(\"http://localhost:8080/api/project\", project);\n        history.push(\"/dashboard\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getProjects = () => async dispatch => {\n    const res = await axios.get(\"/api/project/all\");\n    dispatch({\n        type: GET_PROJECTS,\n        payload: res.data\n    });\n};\n\nexport const getProject = (projectIdentifier, history) => async dispatch => {\n  \n    const res = await axios.get(`/api/project/${projectIdentifier}`);\n    dispatch({\n        type: GET_PROJECT,\n        payload: res.data\n    });\n};\n\nexport const deleteProject = (projectIdentifier, history) => async dispatch => {\n   if(window.confirm(\"Sure to delete the project and all related data?\")){\n    await axios.delete(`/api/project/${projectIdentifier}`);\n    dispatch({\n        type: DELETE_PROJECT,\n        payload: projectIdentifier\n    });\n   }\n    \n};\n","\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\n//Security\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n    onDelete = projectIdentifier => {\n        this.props.deleteProject(projectIdentifier);\n    };\n    render() {\n        const {project} = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>{project.projectName}</h3>\n                            <p>{project.description}</p>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-1\">Project Board </i>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-1\">Update Project Info</i>\n                                    </li>\n                                </Link>\n                                <li className=\"list-group-item delete\" onClick={this.onDelete.bind(this, project.projectIdentifier)}>\n                                    <i className=\"fa fa-minus-circle pr-1\">Delete Project</i>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectItem.propTypes = {\n    deleteProject: PropTypes.func.isRequired\n}\n\nexport default connect(null, {deleteProject}) (ProjectItem);","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n\n    return  (\n        <React.Fragment> \n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n                Create a Project\n            </Link>\n        </React.Fragment>\n    );\n};\n\nexport default CreateProjectButton;","import React, { Component } from 'react';\nimport ProjectItem from './Project/ProjectItem';\nimport CreateProjectButton from './Project/CreateProjectButton';\nimport {connect} from \"react-redux\";\nimport {getProjects} from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n    componentDidMount(){\n       this.props.getProjects(); \n    }\n    render() {\n\n        const  {projects} = this.props.project; // == projects = this.props.project.projects;\n        return (\n            <div className=\"projects\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Projects</h1>\n                            <br />\n                            <CreateProjectButton/>\n                            <br />\n                            <hr />\n                            {\n                                projects.map(project => (\n                                    <ProjectItem key={project.id} project={project} />\n                                ))\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n};\nconst mapStateToProps = state =>({\n    project: state.project     //project == project reducer definend in reducers/index.js file\n});\nexport default connect(mapStateToProps, {getProjects})(Dashboard);","import axios from \"axios\";\n\nconst setJWTToken = token =>{\n    if(token){\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    }else{\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setJWTToken;","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch  => {\n    try{\n        await axios.post(\"/api/users/register\", newUser);\n        history.push(\"/login\");\n        dispatch({\n            type: GET_ERRORS,\n            payload:{}\n        });\n    }catch(err){\n        dispatch({\n            type: GET_ERRORS,\n            payload:err.response.data\n        });\n    }\n}\n\nexport const login = LoginRequest => async dispatch  => {\n    \n\n    try{\n      //  console.log(LoginRequest);\n        // post Login Request\n        const res =  await axios.post(\"/api/users/login\", LoginRequest);\n        // extract the token form res.data\n        const {token} = res.data;\n        // Store the token in the localstorage\n        localStorage.setItem(\"jwtToken\", token);\n        // set our token in header ***\n        setJWTToken(token);\n        // Decode the token on React\n        const decoded = jwt_decode(token);\n        // dispatch to our szecurityReducer\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload:decoded\n        });\n    }catch(err){\n        //console.log(err);\n        dispatch({\n            type: GET_ERRORS,\n            payload:err.response.data\n        });\n    }\n};\n\nexport const logout = () => dispatch  => {\n    localStorage.removeItem(\"jwtToken\");\n    setJWTToken(false);\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload:{}\n    });\n};","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../actions/securityActions\";\n\n\nclass Header extends Component {\n    logout(){\n        this.props.logout();\n        window.location.href = \"/\";\n    }\n\n    render() {\n        const {validToken, user} = this.props.security;\n\n        const userIsAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"/dashboard\">\n                            Dashboard\n                        </a>\n                    </li>\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link \" to=\"/dashboard\">\n                            {user.fullName}\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link \n                            className=\"nav-link\" \n                            to=\"/logout\" \n                            onClick={this.logout.bind(this)}\n                        >\n                            Logout \n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        \n\n        const userIsNotAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                \n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link \" to=\"/register\">\n                            Sign Up\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/login\">\n                            Login \n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n        \n        let headerLinks;\n        if(validToken && user){\n            headerLinks = userIsAuthenticated;\n        }else{\n            headerLinks = userIsNotAuthenticated;\n        }\n       \n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n                <div className=\"container\">\n                    <Link className=\"navbar-brand\" to=\"/dashboard\">\n                        Personal Project Management Tool\n                    </Link>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n                    {headerLinks}\n                    \n                </div>\n            </nav>\n        );\n    }\n}\n\nHeader.propTypes = {\n    logout: PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    security: state.security\n});\n\nexport default connect(\n    mapStateToProps, \n    {logout}\n)(Header);\n\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {createProject} from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n    constructor(){\n        super();\n        this.state = {\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this); //this is a shortcut to bind the on change function to all input fields instead of copying and pasting into all input fields\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    onChange(e){\n        this.setState({ [e.target.name]:e.target.value});\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newProject = {\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date:  this.state.start_date,\n            end_date:    this.state.end_date\n        };\n        this.props.createProject(newProject, this.props.history); \n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div>\n                \n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"text\" \n                                            className={classnames(\"form-control form-control-lg\",{\n                                                \"is-invalid\": errors.projectName\n                                            })} \n                                            placeholder=\"Project Name\" \n                                            name=\"projectName\" \n                                            value={this.state.projectName}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectName && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.projectName}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"text\"  \n                                            className={classnames(\"form-control form-control-lg\",{\n                                                \"is-invalid\": errors.projectIdentifier\n                                            })} \n                                            placeholder=\"Unique Project ID\" \n                                           // disabled \n                                            name=\"projectIdentifier\" \n                                            value={this.state.projectIdentifier}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectIdentifier && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.projectIdentifier}\n                                            </div>\n                                        )}\n                                    </div>\n                                   \n                                    <div className=\"form-group\">\n                                        <textarea  \n                                             className={classnames(\"form-control form-control-lg\",{\n                                                \"is-invalid\": errors.description\n                                            })}  \n                                            placeholder=\"Project Description\"  \n                                            name=\"description\"  \n                                            value={this.state.description}\n                                            onChange={this.onChange}\n                                        ></textarea>\n                                         {errors.description && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.description}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"date\" \n                                            className=\"form-control form-control-lg\" \n                                            name=\"start_date\"  \n                                            value={this.state.start_date}\n                                            onChange={this.onChange}\n                                        />\n                                         <p>{errors.start_date}</p>\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"date\" \n                                            className=\"form-control form-control-lg\" \n                                            name=\"end_date\"  \n                                            value={this.state.end_date}\n                                            onChange={this.onChange}\n                                        />\n                                         <p>{errors.end_date}</p>\n                                    </div>\n\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddProject.propTypes = {\n    createProject: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state =>({\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    {createProject}\n)(AddProject);","import {GET_ERRORS} from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state=initialState, action){\n    \n     switch(action.type){\n        \n        case GET_ERRORS:\n            return action.payload;\n            \n        default:\n            return state;\n    }\n}","import {GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from \"../actions/types\";\n\nconst initialState = {\n    projects: [],\n    project:{}\n};\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case GET_PROJECTS: \n            return{\n                ...state,\n                projects: action.payload\n            };\n        case GET_PROJECT:\n            return{\n                ...state,\n                project: action.payload\n            };\n        case DELETE_PROJECT:\n            return{\n                ...state,\n                projects: state.projects.filter(\n                    project => project.projectIdentifier !== action.payload\n                )\n            };\n        default:\n            return state;\n    }\n}","import {\n    GET_BACKLOG, \n    GET_PROJECT_TASK, \n    DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n    project_tasks:[],\n    project_task: {}\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        \n        case GET_BACKLOG:\n            return{\n                ...state, \n                project_tasks: action.payload\n            }\n\n        case GET_PROJECT_TASK:\n            return{\n                ...state,\n                project_task: action.payload\n            }\n\n        case DELETE_PROJECT_TASK:\n            return{\n                ...state,\n               project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\n            }\n\n        default: \n        return state;\n    }\n}","import {SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n    validToken: false,\n    user: {}\n   \n}\n\nconst booleanActionPayload = (payload)  => {\n    if(payload){ \n        return true\n    }else{\n        return false;\n    }\n}\nexport default function(state= initialState, action){\n    switch(action.type){\n        case SET_CURRENT_USER:\n        return {\n            ...state,\n            validToken: booleanActionPayload(action.payload),\n            user: action.payload\n        }\n\n        default:\n        return state\n    }\n}","import {combineReducers} from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\n\nexport default combineReducers({\n    errors: errorReducer,\n    project: projectReducer,\n    backlog: backlogReducer,\n    security: securityReducer \n});","import {createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store ;\n\nif(window.navigator.userAgent.includes(\"Chrome\")){\n    store = createStore(\n        rootReducer, \n        initialState, \n        compose(applyMiddleware(...middleware), \n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )\n    );\n}else{\n    store = createStore(\n        rootReducer, \n        initialState, \n        compose(applyMiddleware(...middleware))\n    );\n}\nexport default store;","import React, { Component } from 'react';\nimport {getProject, createProject} from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n            id: \"\",\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps){\n        const {\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        } = nextProps.project;\n\n        this.setState({\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        });\n    }\n\n    componentDidMount(){\n        const {projectIdentifier} = this.props.match.params;\n        this.props.getProject(projectIdentifier, this.props.history);\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n    onSubmit(e){\n        e.preventDefault();\n        const updateProject = {\n            id: this.state.id ,\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        };\n        this.props.createProject(updateProject, this.props.history);\n    }\n\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"project\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\n                            <hr />\n                            <form onSubmit = {this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                          \"is-invalid\": errors.projectName\n                                        })}\n                                        placeholder=\"Project Name\" \n                                        name=\"projectName\" \n                                        value={this.state.projectName}\n                                        onChange = {this.onChange}\n                                    />\n                                    {errors.projectName && (\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control form-control-lg\" \n                                        placeholder=\"Unique Project ID\"\n                                        name=\"projectIdentifier\"\n                                        value={this.state.projectIdentifier}\n                                        disabled />\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.description\n                                        })}\n                                        placeholder=\"Project Description\"\n                                        name=\"description\"\n                                        value={this.state.description}\n                                        onChange = {this.onChange}\n                                        >\n                                        {errors.description && (\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\n                                        )}\n                                    </textarea>\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"date\" \n                                        className=\"form-control form-control-lg\" \n                                        name=\"start_date\" \n                                        value={this.state.start_date}\n                                        onChange = {this.onChange}\n                                    />\n                                </div>\n                                <h6>Estimated End Date</h6>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"date\" \n                                        className=\"form-control form-control-lg\" \n                                        name=\"end_date\" \n                                        value={this.state.end_date}\n                                        onChange = {this.onChange}/>\n                                </div>\n        \n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUpdateProject.propTypes = {\n    getProject: PropTypes.func.isRequired,\n    createProject: PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state =>({\n    project: state.project.project,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps, \n    {getProject, createProject}\n)(UpdateProject);","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport {deleteProjectTask} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n\n\nclass ProjectTask extends Component {\n\n    onDeleteClick(backlog_id, project_task_id){\n        \n        this.props.deleteProjectTask(backlog_id, project_task_id);\n    }\n\n    render() {\n        const {project_task} = this.props;\n        let priorityString;\n        let priorityClass;\n        \n        if(project_task.priority === 1){\n            priorityClass = \"bg-danger text-light\";\n            priorityString = \"HIGH\";\n        }\n        if(project_task.priority === 2){\n            priorityClass = \"bg-warning text-light\";\n            priorityString = \"MEDIUM\";\n        }\n        if(project_task.priority === 3){\n            priorityClass = \"bg-info text-light\";\n            priorityString = \"LOW\";\n        }\n        return (         \n            <div className=\"card mb-1 bg-light\">\n\n                <div className={`card-header text-primary ${priorityClass}`}>\n                    ID: {project_task.projectSequence} -- Priority: {priorityString}\n                </div>\n                <div className=\"card-body bg-light\">\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\n                    <p className=\"card-text text-truncate \">\n                        {project_task.acceptanceCriteria}\n                    </p>\n                    <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\n  \n                        View / Update\n                    </Link>\n\n                    <button \n                        className=\"btn btn-danger ml-4\" \n                        onClick = {this.onDeleteClick.bind(\n                            this, \n                            project_task.projectIdentifier, \n                            project_task.projectSequence\n                            )}\n                    >\n                        Delete\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectTask.propTypes = {\n    deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n    null, \n    {deleteProjectTask}\n)(ProjectTask);","import axios from \"axios\";\nimport { \n    GET_ERRORS, \n    GET_BACKLOG, \n    GET_PROJECT_TASK, \n    DELETE_PROJECT_TASK \n} from \"./types\";\n\nexport const addProjectTask = (\n    backlog_id, \n    project_task, \n    history\n)   => async dispatch => {\n    try{\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type:GET_ERRORS,\n            payload: {}\n        });\n    }catch(err){\n        dispatch({\n            type:GET_ERRORS,\n            payload: err.response.data\n        });\n    }   \n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n    try{\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\n        dispatch({\n            type:GET_BACKLOG,\n            payload: res.data\n        });\n    }catch(err){\n        dispatch({\n            type:GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n    \n};\n\nexport const getProjectTask = (backlog_id, project_task_id, history) => async dispatch => {\n    try{\n        const res = await axios.get(`/api/backlog/${backlog_id}/${project_task_id}`);\n       // console.log(res);\n        dispatch({\n            type:GET_PROJECT_TASK,\n            payload: res.data\n        });\n    }catch(err){\n        history.push(\"/dashboard\");\n    }\n};\n\nexport const updateProjectTask = (backlog_id, project_task_id, project_task, history) => async dispatch => {\n    try {\n        await axios.patch(`/api/backlog/${backlog_id}/${project_task_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        })\n    }catch(err){\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    }\n}\n\nexport const deleteProjectTask = (backlog_id, project_task_id) => async dispatch => {\n    \n    if(window.confirm(`Sure to delete the project task ${project_task_id}, this action cannot be undone`)){\n        \n        await axios.delete(`/api/backlog/${backlog_id}/${project_task_id}`);\n        dispatch({\n            type: DELETE_PROJECT_TASK,\n            payload: project_task_id\n        });\n    }\n     \n };\n ","import React, { Component } from 'react';\nimport ProjectTask from './ProjectTasks/ProjectTask';\n//marco\nimport {logout } from \"../../actions/securityActions\";\nimport jwt_decode from \"jwt-decode\";\nimport store from \"../../store\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif(jwtToken){\n  //setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n /* store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n*/\n  const currentTime = Date.now()/1000;\n  if(decoded_jwtToken.exp < currentTime){\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass Backlog extends Component {\n    render() {\n        const {project_tasks_prop} = this.props;\n        const tasks = project_tasks_prop.map(project_task => (\n            <ProjectTask key={project_task.id} project_task = {project_task} /> \n        ));\n\n        let todoItems = [];\n        let inProgressItems = [];\n        let doneItems = [];\n\n        for(let i=0; i<tasks.length; i++){\n            if(tasks[i].props.project_task.status === \"TO_DO\"){\n                todoItems.push(tasks[i]);\n            }\n            if(tasks[i].props.project_task.status === \"IN_PROGRESS\"){\n                inProgressItems.push(tasks[i]);\n            }\n            if(tasks[i].props.project_task.status === \"DONE\"){\n                doneItems.push(tasks[i]);\n            }\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-secondary text-white\">\n                                <h3>TO DO</h3>\n                            </div>\n                        </div>\n                        {todoItems}\n                        {\n                            //insert tasks here\n                        }\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-primary text-white\">\n                                <h3>In Progress</h3>\n                            </div>\n                        </div>\n                        {inProgressItems}\n                        {\n                            //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n\n                            //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n                        }\n                        \n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-success text-white\">\n                                <h3>Done</h3>\n                            </div>\n                        </div>\n                        {doneItems}\n                        {\n                            //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n\n                            //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Backlog;","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getBacklog} from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n    //coinstructor to handle errors\n    constructor(){\n        super();\n        this.state = {\n            errors: {}\n        }\n    }\n    componentDidMount(){\n        const {id} = this.props.match.params;\n        this.props.getBacklog(id);\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n    render() {\n        const {id} = this.props.match.params;\n        const {project_tasks} = this.props.backlog;\n        const {errors} = this.state;\n\n        let BoardContent;\n\n        const boardAlgorithm = (errors, project_task) => {\n            if(project_tasks.length <1){\n                if(errors.projectNotFound){\n                    return(\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\n                            {errors.projectNotFound}\n                        </div>\n                    );\n                }else{\n                   return (<div className=\"alert alert-info text-center\" role=\"alert\">\n                        No project Tasks on this board\n                    </div> )\n                }\n            }else{\n                return <Backlog project_tasks_prop={project_tasks}/>;\n            }\n        };\n        BoardContent = boardAlgorithm(errors, project_tasks);\n\n        return (\n            <div className=\"container\">\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n                </Link>\n                <br />\n                <hr />\n                {BoardContent}\n            </div>\n        );\n    }\n}\nProjectBoard.propTypes = {\n    backlog: PropTypes.object.isRequired,\n    getBacklog: PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired \n};\nconst mapStateToProps = state => ({\n    backlog: state.backlog,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps, \n    {getBacklog}\n)(ProjectBoard);","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport classnames from \"classnames\";\nimport {addProjectTask} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\n\nclass AddProjectTask extends Component {\n    constructor(props){\n        super(props);\n        const {id} = this.props.match.params;\n        this.state = {\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: \"\",\n            projectIdentifier: id,\n            error: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n    //on change\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    //on submit\n    onSubmit(e){\n        e.preventDefault();\n        const newTask = {\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate        \n        };\n        this.props.addProjectTask(this.state.projectIdentifier, newTask, this.props.history);\n    }\n    render() {\n        const {id} = this.props.match.params;\n        const {errors} = this.state;\n        return (\n            <div className=\"add-PBI\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <Link to={`/projectBoard/>${id}`} className=\"btn btn-light\">\n                            Back to Project Board\n                        </Link>\n                        <h4 className=\"display-4 text-center\">Add /Update Project Task</h4>\n                        <p className=\"lead text-center\">Project:  {this.state.projectIdentifier}</p>\n                        <form onSubmit = {this.onSubmit}>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"text\"\n                                    \n                                    className=\"form-control form-control-lg\"\n                                    name=\"summary\" \n                                    placeholder=\"Project Task summary\"\n                                    value={this.state.summary}\n                                    onChange={this.onChange} \n                                />\n                              \n                            </div>\n                            <div className=\"form-group\">\n                                <textarea \n                                    className=\"form-control form-control-lg\" \n                                    placeholder=\"Acceptance Criteria\" \n                                    name=\"acceptanceCriteria\"\n                                    value={this.state.acceptanceCriteria} \n                                    onChange={this.onChange} \n                                >\n                                </textarea>\n                            </div>\n                            <h6>Due Date</h6>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"date\" \n                                    className=\"form-control form-control-lg\" \n                                    name=\"dueDate\" \n                                    value={this.state.dueDate}\n                                    onChange={this.onChange}   \n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <select \n                                    className=\"form-control form-control-lg\" \n                                    name=\"priority\"\n                                    value={this.state.priority} \n                                    onChange={this.onChange}  \n                                >\n                                    <option value={0}>Select Priority</option>\n                                    <option value={1}>High</option>\n                                    <option value={2}>Medium</option>\n                                    <option value={3}>Low</option>\n                                </select>\n                            </div>\n    \n                            <div className=\"form-group\">\n                                <select \n                                    className=\"form-control form-control-lg\" \n                                    name=\"status\"\n                                    value={this.state.status}\n                                    onChange={this.onChange}   \n                                    >\n                                    <option value=\"\">Select Status</option>\n                                    <option value=\"TO_DO\">TO DO</option>\n                                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                    <option value=\"DONE\">DONE</option>\n                                </select>\n                            </div>\n    \n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n        );\n    }\n}\n\nAddProjectTask.propTypes = {\n    addProjectTask: PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    errors: state.errors\n})\nexport default connect(\n    mapStateToProps, \n    {addProjectTask}\n)(AddProjectTask);","\nimport React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport classnames from \"classnames\";\nimport {getProjectTask, updateProjectTask} from \"../../../actions/backlogActions\"\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\n\n\nclass UpdateProjectTask extends Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n            id: \"\",\n            projectSequence: \"\",\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: \"\",\n            dueDate: null, \n            projectIdentifier: \"\",\n            create_At: \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    componentDidMount(){\n        const {backlog_id, project_task_id} = this.props.match.params;\n         \n        this.props.getProjectTask(backlog_id, project_task_id, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors})\n        }\n        const {\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate, \n            projectIdentifier,\n            create_At\n        } = nextProps.project_task;\n\n        this.setState({\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate, \n            projectIdentifier,\n            create_At\n        });\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const updatedProjectTask = {\n            id:this.state.id,\n            projectSequence:this.state.projectSequence,\n            summary:this.state.summary,\n            acceptanceCriteria:this.state.acceptanceCriteria,\n            status:this.state.status,\n            priority:this.state.priority,\n            dueDate: this.state.dueDate, \n            projectIdentifier:this.state.projectIdentifier,\n            create_At:this.state.create_At,\n        }\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, updatedProjectTask, this.props.history)\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\n                            <p className=\"lead text-center\">Project Name: {this.state.projectIdentifier} + Project Task ID: {this.state.projectSequence} </p>\n                            <form onSubmit = {this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.summary\n                                        })} \n                                        name=\"summary\" \n                                        placeholder=\"Project Task summary\" \n                                        value = {this.state.summary}\n                                        onChange = {this.onChange}\n                                    />\n                                    {errors.summary && (\n                                       <div className=\"invalid-feedback\">{errors.summary}</div> \n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.acceptanceCriteria\n                                        })}  \n                                        placeholder=\"Acceptance Criteria\" \n                                        name=\"acceptanceCriteria\"\n                                        value = {this.state.acceptanceCriteria}\n                                        onChange = {this.onChange}\n                                    ></textarea>\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"date\" \n                                        className=\"form-control form-control-lg\" \n                                        name=\"dueDate\"\n                                        value = {this.state.dueDate}\n                                        onChange = {this.onChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select \n                                        className=\"form-control form-control-lg\" \n                                        name=\"priority\"\n                                        value = {this.state.priority}\n                                        onChange = {this.onChange}\n                                    >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <select \n                                        className=\"form-control form-control-lg\" \n                                        name=\"status\"\n                                        value = {this.state.status}\n                                        onChange = {this.onChange}\n                                    >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n        </div> \n        );\n    }\n}\nUpdateProjectTask.propTypes = {\n    getProjectTask: PropTypes.func.isRequired,\n    project_Task: PropTypes.object.isRequired,\n    updateProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    project_task: state.backlog.project_task,\n    errors: state.errors\n})\n\nexport default connect(\n    mapStateToProps, \n    {getProjectTask, updateProjectTask}\n)(UpdateProjectTask);","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n\nclass Landing extends Component {\n\n    componentDidMount(){\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h1 className=\"display-3 mb-4\">Personal Kanban Tool</h1>\n                                <p className=\"lead\">\n                                    Create your account to join active projects or start you own\n                                </p>\n                                <hr />\n                                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                                    Sign Up\n                                </Link>\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                                    Login\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLanding.propTypes = {\n    security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    security: state.security\n});\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react';\nimport {createNewUser} from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport classnames from \"classnames\";\n\n\nclass Register extends Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            fullName: \"\",\n            confirmPassword: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            password: this.state.password,\n            fullName: this.state.fullName,\n            confirmPassword: this.state.confirmPassword\n        }\n        this.props.createNewUser(newUser, this.props.history);\n    }\n\n    componentDidMount(){\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">Create your Account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.fullName\n                                        })} \n                                        placeholder=\"Full Name\" \n                                        name=\"fullName\"\n                                        value={this.state.fullName}\n                                        onChange={this.onChange} \n                                    />\n                                    {errors.fullName && (\n                                        <div className=\"invalid-feedback\">{errors.fullName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.username\n                                        })} \n                                        placeholder=\"Email Address (Username)\" \n                                        name=\"username\" \n                                        value={this.state.username} \n                                        onChange={this.onChange}\n                                    />\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}    \n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"password\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\":errors.password\n                                        })} \n                                        placeholder=\"Password\" \n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}  \n                                    />\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"password\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.confirmPassword\n                                        })} \n                                        placeholder=\"Confirm Password\"\n                                        name=\"confirmPassword\" \n                                        value={this.state.confirmPassword} \n                                        onChange={this.onChange}\n                                    />\n                                    {errors.confirmPassword && (\n                                        <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    createNewUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n     errors: state.errors,\n     security: state.security\n    \n});\nexport default connect(\n    mapStateToProps, \n    {createNewUser}\n)(Register);","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport classnames from \"classnames\";\nimport {login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n    constructor(){\n        super();\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    componentDidMount(){\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n    \n    componentWillReceiveProps(nextProps){\n        if(nextProps.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n    onSubmit(e){\n        e.preventDefault();\n        const loginRequest = {\n            username: this.state.username,\n            password: this.state.password \n        }\n        this.props.login(loginRequest);\n    }\n\n    render() {\n        const {errors} = this.state;\n\n        return (\n          <div className=\"login\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <h1 className=\"display-4 text-center\">Log In</h1>\n                        <form onSubmit= {this.onSubmit}>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className={classnames(\"form-control form-control-lg\",{\n                                        \"is-invalid\": errors.username\n                                    })} \n                                    placeholder=\"Email Address\" \n                                    name=\"username\" \n                                    value={this.state.username}\n                                    onChange={this.onChange}\n                                />\n                                {errors.username && (\n                                    <div className=\"invalid-feedback\">{errors.username}</div>\n                                )}\n                            </div>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"password\" \n                                    className={classnames(\"form-control form-control-lg\",{\n                                        \"is-invalid\": errors.password\n                                    })} \n                                    placeholder=\"Password\" \n                                    name=\"password\" \n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n                                {errors.password && (\n                                    <div className=\"invalid-feedback\">{errors.password}</div>\n                                )}\n                            </div>\n                            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps, \n    {login}\n) (Login);","import React from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n\nconst SecureRoute = ({component: Component, security, ...otherProps}) => (\n    <Route \n        {...otherProps} \n        render={props => \n            security.validToken ===true ? (\n                <Component{...props}/>\n            ):(\n                <Redirect to=\"/login\"/>\n            )\n        } \n    />\n);\n\nSecureRoute.propTypes = {\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state =>({\n    security: state.security\n});\n\nexport default connect(mapStateToProps)(SecureRoute);","import React, { Component } from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport AddProject from './components/Project/AddProject';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from \"./components/Layout/Landing\";\nimport Register from './components/UserManagment/Register';\nimport Login from './components/UserManagment/Login';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from './actions/types';\nimport {logout } from \"./actions/securityActions\";\nimport SecureRoute from \"./securityUtils/SecureRoute\"\n\nconst jwtToken = localStorage.jwtToken;\n\nif(jwtToken){\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now()/1000;\n  if(decoded_jwtToken.exp < currentTime){\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n            <Route exact path=\"/\" component={Landing}/>\n            <Route exact path=\"/register\" component={Register}/>\n            <Route exact path=\"/login\" component={Login}/>\n            {\n              //Privates Routes\n            }\n            <Switch>\n              <SecureRoute exact path=\"/dashboard\" component={Dashboard}/>\n              <SecureRoute exact path=\"/addProject\" component={AddProject}/>\n              <SecureRoute exact path=\"/updateProject/:projectIdentifier\" component={UpdateProject}/>\n              <SecureRoute exact path=\"/projectBoard/:id\" component={ProjectBoard}/>\n              <SecureRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask}/>\n              <SecureRoute exact path=\"/updateProjectTask/:backlog_id/:project_task_id\" component={UpdateProjectTask}/>\n            </Switch>                  \n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App; \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}